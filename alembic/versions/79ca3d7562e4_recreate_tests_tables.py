"""recreate tests tables

Revision ID: 79ca3d7562e4
Revises: c900c9bc32cb
Create Date: 2024-10-02 16:48:29.549630

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '79ca3d7562e4'
down_revision: Union[str, None] = 'c900c9bc32cb'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Сначала удаляем зависимые таблицы
    op.drop_table('psyco_answers_with_score_marker')
    op.drop_table('psyco_answers_with_correct_marker')
    op.drop_table('psyco_questions_with_score_answers')
    op.drop_table('psyco_questions_with_correct_answer')
    op.drop_table('psyco_results_with_score_group')
    op.drop_table('psyco_results_with_from_to_group')
    
    # Теперь можем удалить основные таблицы
    op.drop_table('psyco_tests_with_score_answers')
    op.drop_table('pyco_tests_with_correct_answer')

    # Создаем новые таблицы
    # create table 'psyco_answers'
    op.create_table('psyco_answers',
    sa.Column('answer_text', sa.String(), nullable=False),
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_psyco_answers'))
    )
    op.create_table('psyco_tests',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('test_type', sa.String(), nullable=False),
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_psyco_tests'))
    )
    op.create_table('psyco_questions',
    sa.Column('question_text', sa.String(), nullable=False),
    sa.Column('test_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['test_id'], ['psyco_tests.id'], name=op.f('fk_psyco_questions_test_id_psyco_tests')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_psyco_questions'))
    )
    op.create_table('psyco_results',
    sa.Column('test_id', sa.UUID(), nullable=False),
    sa.Column('min_score', sa.Integer(), nullable=False),
    sa.Column('max_score', sa.Integer(), nullable=False),
    sa.Column('text', sa.String(), nullable=False),
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['test_id'], ['psyco_tests.id'], name=op.f('fk_psyco_results_test_id_psyco_tests')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_psyco_results'))
    )
    op.create_table('psyco_question_answers',
    sa.Column('question_id', sa.UUID(), nullable=False),
    sa.Column('answer_id', sa.UUID(), nullable=False),
    sa.Column('is_correct', sa.Boolean(), nullable=True),
    sa.Column('score_value', sa.Integer(), nullable=True),
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['answer_id'], ['psyco_answers.id'], name=op.f('fk_psyco_question_answers_answer_id_psyco_answers')),
    sa.ForeignKeyConstraint(['question_id'], ['psyco_questions.id'], name=op.f('fk_psyco_question_answers_question_id_psyco_questions')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_psyco_question_answers'))
    )

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('psyco_answers_with_score_marker',
    sa.Column('answer_text', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('score_value', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('question_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['psyco_questions_with_score_answers.id'], name='fk_psyco_answers_with_score_marker_question_id_psyco_qu_f193'),
    sa.PrimaryKeyConstraint('id', name='pk_psyco_answers_with_score_marker')
    )
    op.create_table('psyco_answers_with_correct_marker',
    sa.Column('answer_text', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('is_correct', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('question_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['psyco_questions_with_correct_answer.id'], name='fk_psyco_answers_with_correct_marker_question_id_psyco__73f9'),
    sa.PrimaryKeyConstraint('id', name='pk_psyco_answers_with_correct_marker')
    )
    op.create_table('pyco_tests_with_correct_answer',
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='pk_pyco_tests_with_correct_answer'),
    postgresql_ignore_search_path=False
    )
    op.create_table('psyco_results_with_score_group',
    sa.Column('test_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('min_score', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('max_score', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('text', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['test_id'], ['psyco_tests_with_score_answers.id'], name='fk_psyco_results_with_score_group_test_id_psyco_tests_w_4aa1'),
    sa.PrimaryKeyConstraint('id', name='pk_psyco_results_with_score_group')
    )
    op.create_table('psyco_questions_with_correct_answer',
    sa.Column('question_text', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('test_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['test_id'], ['pyco_tests_with_correct_answer.id'], name='fk_psyco_questions_with_correct_answer_test_id_pyco_tes_8e21'),
    sa.PrimaryKeyConstraint('id', name='pk_psyco_questions_with_correct_answer')
    )
    op.create_table('psyco_results_with_from_to_group',
    sa.Column('min_score', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('max_score', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('text', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('test_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['test_id'], ['pyco_tests_with_correct_answer.id'], name='fk_psyco_results_with_from_to_group_test_id_pyco_tests__6ecb'),
    sa.PrimaryKeyConstraint('id', name='pk_psyco_results_with_from_to_group')
    )
    op.create_table('psyco_questions_with_score_answers',
    sa.Column('question_text', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('test_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['test_id'], ['psyco_tests_with_score_answers.id'], name='fk_psyco_questions_with_score_answers_test_id_psyco_tes_5f1a'),
    sa.PrimaryKeyConstraint('id', name='pk_psyco_questions_with_score_answers')
    )
    op.create_table('psyco_tests_with_score_answers',
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='pk_psyco_tests_with_score_answers')
    )
    op.drop_table('psyco_question_answers')
    op.drop_table('psyco_results')
    op.drop_table('psyco_questions')
    op.drop_table('psyco_tests')
    op.drop_table('psyco_answers')
    # ### end Alembic commands ###
